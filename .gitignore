#include<stdio.h>
#include<conio.h>
#include<string.h>
#include<stdlib.h>
struct sym
{
char lab[1000];
int val;
};
struct
{
char opt[1000];
int val;
}o[1000];
void main ()
{
FILE *f1,*f2,*fp,*f4,*f3;
char la[1000],op[1000],opr[1000],a[1000],c,d[1000],e,zr[1000],rr[50];
int i,j,n,k=0,lc=0,m=0,p=0,zz,q=0,tt=0,pp,w=0,pr[100],yr[100],b,flag;
struct sym s[1000];
f1=fopen("pro.txt","r");
f3=fopen("symtab.txt","w");
fp=fopen("opcode.txt","w");
f2=fopen("prog2.txt","r");
c=fgetc(f1);
i=0;
printf ("\n SOURCE PROGRAM \n");
printf("%c",c);
while (c !=EOF)
{
a[i]=c;
c=fgetc(f1);
i++;
printf("%c",c);
}i=0;
while(strcmp(op,"end")!=0)
{
if(a[i]==32 )
{
strcpy(la,"");i++;}
else
{
j=0;
while(a[i]!=32)
{
la[j]=a[i];
i++;j++;
}
la[j]='\0';
i++;
}
if(a[i]==32)
{
strcpy(op,"");
i++;}
else
{
j=0;
while (a[i]!=32)
{
op[j]=a[i];
i++;j++;
}
op[j]='\0';
i++;
}
if(a[i]=='\n')
{
strcpy(opr,"");
i++;
}
else
 {
 j=0;
while (a[i]!='\n')
{
opr[j]=a[i];
i++;j++;
}
opr[j]='\0';
i++;
}
j=0;
if (strcmp (la," ") !=0)
{
  strcpy(s[m].lab,la);
  if(strcmp(op,"start")==0)
 {
  sscanf(opr,"%x",&lc);
  s[m].val=lc;m++;
  continue;
 }
 else if(strcmp(op,"base")==0)
 {
     strcpy(s[m].lab,op);
     m++;
     pp=strlen(opr)-1;
     opr[pp]='*';
     opr[pp+1]='\0';
     strcpy(s[m].lab,opr);
     m++;
}
 else if (strcmp (op,"byt") ==0)
 { w=0;pp=2;
    if(opr[0]=='c')
   {
    while(opr[pp]!='\'')
    {
      zr[w]=opr[pp];
      w++;pp++;}
     zr[w]='\0';
     zz=strlen(zr);
    }
 else
    zz=1;
    fprintf(fp,"%x %s %s\n",lc,op,opr);
    strcpy(s[m].lab,la);
    s[m].val=lc,m++;
    lc=lc+zz;
 }
else if(strcmp(opr,"")==0)
{
 strcpy(s[m].lab,la);
 s[m].val=lc;m++;
 opr[0]='-';
 opr[1]='\0';
 fprintf(fp,"%x %s %s\n",lc,op,opr);
 lc=lc+3;
}
else if (op[0] =='=')
{
 fprintf(fp,"%x %s %s\n",lc,op,opr);
 strcpy(s[m].lab,la);
 s[m].val=lc;m++;
 lc=lc+4;
}
 else if (strcmp (op,"word") ==0)
 {
 fprintf(fp,"%x %s %s\n",lc,op,opr);
 strcpy(s[m].lab,la);
 s[m].val=lc;m++;
 lc=lc+3;
 }
 else if (strcmp (op,"resw") ==0)
 {
 fprintf(fp,"%x %s %s\n",lc,op,opr);
 strcpy(s[m].lab,la);
 s[m].val=lc;m++;
 lc=lc+atoi(opr) *3;
 }
else if (strcmp (op,"resb") ==0)
 {
 fprintf(fp,"%x %s %s\n",lc,op,opr);
 strcpy(s[m].lab,la);
 s[m].val=lc;m++;
 lc=lc+atoi(opr);
 }
 else if (opr[1]==',' || strlen(opr)==1)
 {
 fprintf(fp,"%x %s %s\n",lc,op,opr);
 strcpy(s[m].lab,la);
 s[m].val=lc;m++;
 lc=lc+2;
 }
 else
 {
 fprintf(fp,"%x %s %s\n",lc,op,opr);
 strcpy(s[m].lab,la);
 s[m].val=lc;m++;
 lc=lc+3;
 }}
else
{
fprintf(fp,"%x %s %s\n",lc,op,opr);
lc=lc+3;
}}
for(i=0;i<m;i++)
    if(strcmp(s[i].lab,"")!=0)
     fprintf(f3,"\n%s\t%x",s[i].lab,s[i].val);
while(!feof(f2))
{
fscanf(f2,"%s %x",o[k].opt,&o[k].val);
k++;
}
fclose(fp);
lc=0;
fp=fopen("opcode.txt","r");
pp=0;
while(!feof(fp))
{fscanf(fp,"%x %s %s",&lc,op,opr);
  if(strcmp(op,"byt")==0)
  {
      if(opr[0]=='c')
     {pp=2;
      w=0;
      while(opr[pp]!='\'')
      {
        d[w]=opr[pp];
        w++;pp++;}
        d[w]='\0';
      for(pp=0;pp<k;pp++)
        {
            if(strcmp(d,o[pp].opt)==0)
             {
              printf("%s  %s",op,opr);
              printf("%x\n",o[pp].val);
              break;}}
              if(pp>=k){
                     printf("%s %s ",op,opr);
                     w=0;
                     while(d[w]!='\0'){
              printf("%d",(int)d[w]);w++;}
              printf("\n");
            }}
if(opr[0]=='x')
{
    pp=2;
    w=0;
    printf("%s  %s",op,opr);
    while(opr[pp]!='\''){
        printf("%c",opr[pp]);pp++;}
        printf("\n");}}

  else if(strcmp(op,"word")==0)
  {
      printf("%s %s ",op,opr);
      sscanf(opr,"%d",&w);
      printf("%06x",w);
  }
  else if(op[0]=='=')
  {
      j=0;
      strcpy(d,opr);
      if(d[0]=='#'){
      while(d[j]!='\0'){
              d[j]=d[j+1];j++;}
           strcpy(zr,d);}
      else
      {if(d[0]=='@'){
         while(d[j]!='\0'){
              d[j]=d[j+1];j++;}}}

      for(j=0;j<m;j++)
      if(strcmp(d,s[j].lab)==0)break;
      if(s[j].val!=0)
       sprintf(zr,"%x",s[j].val);
       w=0;
       p=0;
       while(op[p]!='\0')
       {
        op[w]=op[w+1];
        w++;p++;}
    for(j=0;j<k;j++)
        if(strcmp(op,o[j].opt)==0)
          break;
    printf("\n%s %s ",op,opr);
    printf(" %x%c",o[j].val,e);
    printf("%05s",d);

  }
  else if(strcmp(op,"resw")==0);
  else if(strcmp(opr,"-")==0)
  {
       for(pp=0;pp<k;pp++)
        if(strcmp(op,o[pp].opt)==0)break;

    printf("%s ",op);
    printf("%x0000\n",o[pp].val);

  }
  else if(strcmp(op,"resb")==0);
  else if(strcmp(op,"end")==0);
   else if(opr[1]==',' || strlen(opr)==1)
  {
    tt=strlen(opr);
    if(tt==1)
    {
        for(w=0;w<k;w++)
        {
          if(strcmp(opr,o[w].opt)==0)
          {
            for(pp=0;pp<k;pp++)
              if(strcmp(op,o[pp].opt)==0)
                 {yr[0]=o[pp].val;break;}
                 yr[1]=0;
              yr[2]=o[w].val;
              printf("%s  %s ",op,opr);
              printf("%02x%x%x\n",yr[0],yr[1],yr[2]);
            break;}}}
    if(tt==3)
    {
      yr[0]=opr[0];
      yr[1]='\0';
      for(w=0;w<k;w++)
      {
        if(strcmp(yr,o[w].opt)==0)
        {
            for(p=0;p<k;p++)
            {
             yr[0]=opr[2];
             yr[1]='\0';
               if(strcmp(yr,o[p].opt)==0)
            {
             for(pp=0;pp<k;pp++)
               if(strcmp(op,o[pp].opt)==0)
                  {yr[0]=o[pp].val;break;}
                yr[1]=o[p].val;
                yr[2]=o[w].val;
                  printf("%s %s ",op,opr);
                    printf("%02x%x%x\n",yr[0],yr[1],yr[2]);
                    break;

}}}}}}



  else{
        if(opr[0]=='#')
        {   j=0;w=0;p=0;
            strcpy(d,opr);
            while(d[j]!='\0'){
              d[j]=d[j+1];j++;}
         e='d';
         for(j=0;j<m;j++){
        if(strcmp(d,s[j].lab)==0)flag=1;break;}
        if(flag==1){
         for(j=0;j<k;j++)
        if(strcmp(op,o[j].opt)==0)break;
         printf("\n%s %s ",op,opr);
         printf(" %x%c%03s",o[j].val,e,d);continue;
         }}
         j=0;
         strcpy(a,opr);
         if(a[0]=='@')
         while(a[j]!='\0'){
              a[j]=a[j+1];j++;}
         flag=0;
        for(i=0;i<m;i++)
         if(strcmp("base",s[i].lab)==0)
            {flag=1;break;}
              if(flag==1)
              {
                strcpy(d,s[i+1].lab);
                d[pp-1]='\0';
                   pp=strlen(d);
                  for(w=0;w<m;w++)
                   if(strcmp(d,s[w].lab)==0)break;
                  for(j=0;j<m;j++)
                   if(strcmp(a,s[j].lab)==0)break;
                zz=s[j].val-s[w].val;
                zr[0]='\0';
                sprintf(zr,"%x",zz);
                w=strlen(zr);
                printf("\n%d",w);
                if(w<=3){
                b=1;p=0;
                n=1;i=1;
         if(b==1 && p==0)
            e='e';
         else
            e='d';
     for(j=0;j<k;j++)
        if(strcmp(op,o[j].opt)==0)
          break;
                printf("\n%s %s ",op,opr);
               printf(" %x%c%03s\n\n\n",o[j].val,e,zr);}
               else
                flag=0;}

      if(flag==0){
      for(j=0;j<m;j++)
      if(strcmp(a,s[j].lab)==0)break;
      zz=lc+3;
      pp=s[j].val-zz;
      zr[0]='\0';
      sprintf(zr,"%x",pp);
      w=strlen(zr);
      printf("pc");
      //printf("\n%x---%x==%x",s[j].val,zz,pp);
      p=1;n=1;i=1;
      b=0;
        if(w>3)
          {
              zr[0]=zr[w-3];
              zr[1]=zr[w-2];
              zr[2]=zr[w-1];
              zr[3]='\0';}
         if(b==1 && p==0)
            e='e';
         else
            e='d';
     for(j=0;j<k;j++)
        if(strcmp(op,o[j].opt)==0)
          break;
     printf("\n%s %s ",op,opr);
     printf(" %x%c%03s\n\n\n",o[j].val,e,zr);}
     }}
getch();
}
